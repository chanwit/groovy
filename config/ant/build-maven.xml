<?xml version="1.0"?>

<!--
Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the License.

This work is copyright by the author(s) and is part of a greater work collectively copyright by the
Groovy community. See the NOTICE.txt file distributed with this work for additional information.

Author : Paul King
$Revision$ ($LastChangedBy$)
$Date$
-->

<project name="build-maven" default="" basedir="../.." xmlns:artifact="urn:maven-artifact-ant">

    <import file="build-setup.xml"/>

    <macrodef name="maven.dependencies">
        <attribute name="useScope"/>
        <attribute name="filesetId"/>
        <attribute name="pomRefId"/>
        <sequential>
            <artifact:dependencies useScope="@{useScope}" filesetId="@{filesetId}">
                <remoteRepository refid="ibiblio.remote.repository"/>
                <remoteRepository refid="repo1.remote.repository"/>
                <pom refid="@{pomRefId}"/>
            </artifact:dependencies>
        </sequential>
    </macrodef>

    <macrodef name="fetch.maven">
        <attribute name="scope"/>
        <attribute name="module"/>
        <sequential>
            <maven.dependencies useScope="@{scope}" filesetId="fs.@{scope}.@{module}" pomRefId="@{module}.pom"/>
        </sequential>
    </macrodef>

    <macrodef name="maven.pom">
        <attribute name="file"/>
        <attribute name="id"/>
        <sequential>
            <artifact:pom file="@{file}" id="@{id}"/>
        </sequential>
    </macrodef>

    <macrodef name="fetch.maven.all.scopes">
        <attribute name="module"/>
        <sequential>
            <fetch.maven scope="compile" module="@{module}"/>
            <fetch.maven scope="runtime" module="@{module}"/>
            <fetch.maven scope="test" module="@{module}"/>
        </sequential>
    </macrodef>

    <macrodef name="fetch.maven.all.modules">
        <sequential>
            <fetch.maven.all.scopes module="groovy"/>
            <fetch.maven scope="runtime" module="groovy-jdk14-extras"/>
            <fetch.maven scope="runtime" module="groovy-tools"/>
            <fetch.maven scope="runtime" module="groovy-examples"/>
        </sequential>
    </macrodef>

    <macrodef name="maven.remote.repository">
        <attribute name="id"/>
        <attribute name="url"/>
        <sequential>
            <artifact:remoteRepository id="@{id}" url="@{url}"/>
        </sequential>
    </macrodef>

    <target name="-mavenInit" depends="-mavenTaskdef,-mavenPomDefinitions,-mavenRepositoryDefinitions"/>

    <target name="-mavenTaskdef">
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
            <classpath>
                <fileset dir="${bootstrapDirectory}" includes="maven-ant-tasks-*.jar"/>
            </classpath>
        </typedef>
    </target>

    <target name="-mavenPomDefinitions">
        <maven.pom file="pom.xml" id="groovy.pom"/>
        <xslt in="pom.xml" out="${targetDirectory}/groovy-all.pom" style="config/maven/groovy-all.xsl"/>
        <maven.pom file="${targetDirectory}/groovy-all.pom" id="groovy-all.pom"/>
        <maven.pom file="config/maven/groovy-tools.pom" id="groovy-tools.pom"/>
        <maven.pom file="config/maven/groovy-examples.pom" id="groovy-examples.pom"/>
        <maven.pom file="config/maven/groovy-jdk14-extras.pom" id="groovy-jdk14-extras.pom"/>
        <antcall target="-mavenPomDefinitionsRetro"/>
    </target>

    <target name="-mavenPomDefinitionsRetro" if="_forceRetro_">
        <xslt in="pom.xml" out="${targetDirectory}/groovy-jdk14.pom" style="config/maven/groovy-jdk14.xsl"/>
        <xslt in="${targetDirectory}/groovy-all.pom" out="${targetDirectory}/groovy-all-jdk14.pom" style="config/maven/groovy-all-jdk14.xsl"/>
        <!-- TODO: work out why setting these here get overriden; currently set in build.xml -->
        <!--<maven.pom file="${targetDirectory}/groovy-jdk14.pom" id="groovy-jdk14.pom"/>-->
        <!--<maven.pom file="${targetDirectory}/groovy-all-jdk14.pom" id="groovy-all-jdk14.pom"/>-->
    </target>

    <target name="-mavenRepositoryDefinitions">
        <maven.remote.repository id="repo1.remote.repository" url="http://repo1.maven.org/maven2/"/>
        <maven.remote.repository id="ibiblio.remote.repository" url="http://ibiblio.org/maven2/"/>
    </target>

    <target name="-fetchDependencies" depends="-mavenFetchAllModules,-copyLibraries"/>

    <target name="-mavenFetchAllModules" depends="-mavenInit" unless="_skipFetch_">
        <fetch.maven.all.modules/>
    </target>

    <target name="-copyLibraries" unless="_skipFetch_">
        <definePath filesetId="fs.compile.groovy" pathId="compilePath" libdir="${compileLibDirectory}"/>
        <definePath filesetId="fs.runtime.groovy" pathId="runtimePath" libdir="${runtimeLibDirectory}"/>
        <definePath filesetId="fs.test.groovy" pathId="testLibPath" libdir="${testLibDirectory}"/>
        <definePath filesetId="fs.runtime.groovy-tools" pathId="toolsPath" libdir="${toolsLibDirectory}"/>
        <definePath filesetId="fs.runtime.groovy-examples" pathId="examplesPath" libdir="${examplesLibDirectory}"/>
        <definePath filesetId="fs.runtime.groovy-jdk14-extras" pathId="jdk14ExtrasPath" libdir="${extrasLibDirectory}"/>
    </target>

    <target name="-mavenDeployInit" depends="-mavenInit">
        <artifact:install-provider artifactId="wagon-webdav" version="1.0-beta-2"/>
    </target>

    <macrodef name="definePath">
        <attribute name="filesetId"/>
        <attribute name="libdir"/>
        <attribute name="pathId"/>
        <sequential>
            <delete dir="@{libdir}" failonerror="false"/>
            <mkdir dir="@{libdir}"/>
            <copy todir="@{libdir}">
                <mapper type="flatten"/>
                <fileset refid="@{filesetId}"/>
            </copy>
            <path id="@{pathId}">
                <fileset dir="@{libdir}" includes="**/*.jar"/>
            </path>
        </sequential>
    </macrodef>

    <macrodef name="mavenDeploy">
        <attribute name="version"/>
        <attribute name="prefix"/>
        <sequential>
            <artifact:deploy file="${targetDistDirectory}/@{prefix}-@{version}.jar">
                <pom refid="@{prefix}.pom"/>
                <attach file="${targetDistDirectory}/@{prefix}-@{version}-sources.jar" classifier="sources"/>
                <attach file="${targetDistDirectory}/@{prefix}-@{version}-javadoc.jar" classifier="javadoc"/>
            </artifact:deploy>
        </sequential>
    </macrodef>

    <macrodef name="mavenInstallRepo">
        <attribute name="version"/>
        <attribute name="prefix"/>
        <sequential>
            <artifact:install file="${targetDistDirectory}/@{prefix}-@{version}.jar">
                <pom refid="@{prefix}.pom"/>
                <attach file="${targetDistDirectory}/@{prefix}-@{version}-sources.jar" classifier="sources"/>
                <attach file="${targetDistDirectory}/@{prefix}-@{version}-javadoc.jar" classifier="javadoc"/>
            </artifact:install>
        </sequential>
    </macrodef>

</project>
